
    (
        "Royal Straight Flush Multiple",
        [
        ["Ac","Kc","Qc","Jc","Tc"],
        ["Kd","Qd","Jd","Td","9d"],
        ["5h","4h","3h","2h","Ah"],
        
        ["Ac","Ad","Ah","As","Tc"],
        ["Kc","Kd","Kh","Ks","Qc"],
        
        
        ["Ac","Ad","Ah","Qc","Qd"],
        ["Kc","Kd","Kh","Jc","Jd"],
        ["Kc","Kd","Kh","Tc","Td"],
        
        
        ["Ac","Kc","Qc","Jc","5c"],
        ["Ad","Kd","Qd","Jd","5d"],
        ["As","Ks","Qs","Ts","5s"],
        ["Ah","Kh","Qh","Th","7h"],


        ["Ac","Kd","Qc","Jc","Tc"],
        ["Ad","Kc","Qd","Jd","Td"],
        ["9s","Kh","Qs","Js","Ts"],
        ["Ah","5s","4h","3h","2h"],

        ["Ac","Ad","As","Jc","Tc"],
        ["Kc","Kd","Ks","Js","Td"],


        ["Ac","Ad","Qc","Qd","Tc"],
        ["As","Ah","Qs","Qh","Td"],
        ["Ac","Ad","Qc","Qd","Tc"],
        ["Kh","Kd","Jc","Jd","Tc"],




        ["Ac","Ad","Qc","Jc","Tc"],

        ["Ac","7d","Qc","Jc","Tc"],
        ["Ad","7s","Qh","Jd","Td"],

        ["Kc","7h","Qd","Js","Ts"],
        ["Kc","7h","Qd","Js","9s"],


        ],
        "Straight Flush  ['Ac','Kc','Qc','Jc','Tc']"
    ),


III. Valid Input - Multiple Hands & Tie-Breaking

These tests verify the correct winner is chosen when multiple hands are provided, including various tie-breaking scenarios.

Different Hand Ranks:

Example from prompt: evaluate_hand([["Ac","Kc","Qc","Jc","Td"], ["Ks","Qs","Js","Ts","9s"]]). Expected: Straight Flush  ["Ks","Qs","Js","Ts","9s"]
Four of a Kind vs. Full House: evaluate_hand([["2c","2d","2h","2s","3c"], ["Ac","Ad","As","Kc","Kd"]]). Expected: Four of a Kind  ["Ac","2c","2d","2h","2s","3c"] (Error in my expected here, the Four of a kind has cards 2c,2d,2h,2s,3c. The Full House is Ac,Ad,As,Kc,Kd. Four of a kind wins. Sorted cards for 2c,2d,2h,2s,3c are ["3c","2c","2d","2h","2s"])
Correction: evaluate_hand([["2c","2d","2h","2s","3c"], ["Ac","Ad","As","Kc","Kd"]]). Hand1: Four 2s, 3 kicker. Hand2: Aces full of Ks. Four of a Kind (2s) loses to Full House (Aces full). Expected: Full House  ["Ac","Ad","As","Kc","Kd"]
Flush vs. Straight: evaluate_hand([["Kh","Qh","7h","5h","2h"], ["As","Kd","Qc","Jh","Ts"]]). Expected: Flush  ["Kh","Qh","7h","5h","2h"]
Straight vs. Three of a Kind: evaluate_hand([["6s","5d","4c","3h","2s"], ["Ac","Ad","As","Kc","Qd"]]). Expected: Straight  ["6s","5d","4c","3h","2s"]
Three of a Kind vs. Two Pair: evaluate_hand([["7c","7d","7h","2s","3d"], ["As","Ad","Kc","Kd","Qs"]]). Expected: Three of a Kind  ["7c","7d","7h","3d","2s"] (Sorted: 7c,7d,7h,3d,2s)
Two Pair vs. One Pair: evaluate_hand([["Ts","Td","9s","9d","Ac"], ["Ks","Kd","Ac","Qh","Js"]]). Expected: Two Pair  ["Ac","Ts","Td","9s","9d"] (Sorted: Ac, Ts, Td, 9d, 9s or 9s, 9d) Let's be precise: ["Ac","Td","Ts","9d","9s"]
One Pair vs. High Card: evaluate_hand([["2c","2d","As","Kc","Qd"], ["As","Ks","Qs","Js","9h"]]). Expected: One Pair  ["As","Ks","Qd","2c","2d"]
Tie-Breaking - Straight Flush:

Higher Straight Flush wins: evaluate_hand([["Ks","Qs","Js","Ts","9s"], ["8h","7h","6h","5h","4h"]]). Expected: Straight Flush  ["Ks","Qs","Js","Ts","9s"]
Ace-low vs. King-high Straight Flush: evaluate_hand([["5d","4d","3d","2d","Ad"], ["Kd","Qd","Jd","Td","9d"]]). Expected: Straight Flush  ["Kd","Qd","Jd","Td","9d"]
Tie-Breaking - Four of a Kind:

Higher rank of four wins: evaluate_hand([["As","Ah","Ad","Ac","2s"], ["Ks","Kh","Kd","Kc","Js"]]). Expected: Four of a Kind  ["As","Ad","Ah","Ac","2s"] (sorted suits for Aces)
Same rank of four, higher kicker wins: evaluate_hand([["Ks","Kh","Kd","Kc","Js"], ["Ks","Kh","Kd","Kc","Ts"]]). Expected: Four of a Kind  ["Kd","Kh","Ks","Kc","Js"] (sorted suits for Kings, then Js)
Tie-Breaking - Full House:

Higher rank of three cards wins: evaluate_hand([["As","Ah","Ad","2c","2s"], ["Ks","Kh","Kd","Qc","Qs"]]). Expected: Full House  ["Ac","Ad","As","2c","2s"]
Same three cards, higher pair wins: evaluate_hand([["Ks","Kh","Kd","Qc","Qs"], ["Ks","Kh","Kd","Jc","Js"]]). Expected: Full House  ["Kd","Kh","Ks","Qc","Qs"]
Tie-Breaking - Flush:

Highest card in flush: evaluate_hand([["As","Ks","Qs","Js","8s"], ["Ac","Kc","Qc","Jc","9c"]]). Expected: Flush  ["Ac","Kc","Qc","Jc","9c"]
Identical high cards, next highest decides: evaluate_hand([["As","Ks","Qs","7s","6s"], ["As","Ks","Qs","8c","2c"]]). Expected: Flush  ["Ac","Kc","Qc","8c","2c"]
All cards compared: evaluate_hand([["As","Ks","Qs","Js","9s"], ["As","Ks","Qs","Js","8c"]]). Expected: Flush  ["As","Ks","Qs","Js","9s"]
Tie-Breaking - Straight:

Higher high card wins: evaluate_hand([["As","Ks","Qs","Js","Ts"], ["Ks","Qs","Js","Ts","9s"]]). Expected: Straight  ["As","Ks","Qs","Js","Ts"] (cards sorted by rank, then suit for ties if any)
Ace-low vs. Six-high straight: evaluate_hand([["5d","4c","3h","2s","Ad"], ["6d","5c","4h","3s","2d"]]). Expected: Straight  ["6d","5c","4h","3s","2d"]
Tie-Breaking - Three of a Kind:

Higher rank of three wins: evaluate_hand([["As","Ah","Ad","Kc","Qs"], ["Ks","Kh","Kd","Ac","Qs"]]). Expected: Three of a Kind  ["Ac","Ad","As","Kc","Qs"]
Same three, kicker decides: evaluate_hand([["Ks","Kh","Kd","Ac","Js"], ["Ks","Kh","Kd","Ac","Ts"]]). Expected: Three of a Kind  ["Ac","Kd","Kh","Ks","Js"] (Sorted: Ac, Kd, Kh, Ks, Js)
Same three, same first kicker, second kicker decides: evaluate_hand([["Ks","Kh","Kd","Ac","Js"], ["Ks","Kh","Kd","Ac","Jd"]]). Assuming Js > Jd because s > d, the first hand might win if tie-breaking extends to suits of kickers, or it's a true tie. If true tie, assume first hand wins by problem convention. If sorted cards list for Ks,Kh,Kd,Ac,Js is ["Ac","Kd","Kh","Ks","Js"] and for Ks,Kh,Kd,Ac,Jd is ["Ac","Jd","Kd","Kh","Ks"].
Poker tie-breaking usually doesn't use suits of kickers. These are identical hands in strength. The problem should specify how to break ties if hands are truly equal. For now, assume first hand is returned or test cases avoid this. Test with different second kicker: evaluate_hand([["Ks","Kh","Kd","Ac","Js"], ["Ks","Kh","Kd","Ac","Ts"]]) (already did this, Js beats Ts). Test evaluate_hand([["Ks","Kh","Kd","Ac","Qh"], ["Ks","Kh","Kd","As","Tc"]]). Expected: Three of a Kind  ["As","Kd","Kh","Ks","Tc"] (As kicker wins)
Tie-Breaking - Two Pair:

Higher top pair: evaluate_hand([["As","Ah","2s","2h","Ks"], ["Ks","Kh","Qs","Qh","Js"]]). Expected: Two Pair  ["Ac","Ad","Ks","2h","2s"] (Sorted: Ac, Ad, Ks, 2h, 2s)
Same top pair, higher second pair: evaluate_hand([["As","Ah","Ks","Kh","Qs"], ["As","Ah","Qs","Qh","Js"]]). Expected: Two Pair  ["Ac","Ad","Kh","Ks","Qs"]
Same two pairs, kicker decides: evaluate_hand([["As","Ah","Ks","Kh","Qs"], ["As","Ah","Ks","Kh","Js"]]). Expected: Two Pair  ["Ac","Ad","Kh","Ks","Qs"]
Tie-Breaking - One Pair:

Higher pair wins: evaluate_hand([["As","Ah","Kc","Qh","Js"], ["Ks","Kh","As","Qh","Js"]]). Expected: One Pair  ["Ah","As","Kc","Qh","Js"]
Same pair, kickers decide (1st kicker): evaluate_hand([["As","Ah","Kc","Qh","Js"], ["As","Ah","Jc","Qh","Tc"]]). Expected: One Pair  ["Ah","As","Kc","Qh","Js"] (Kicker K vs Q)
Same pair, same 1st kicker, 2nd kicker decides: evaluate_hand([["As","Ah","Kc","Qh","Js"], ["As","Ah","Kc","Jd","Tc"]]). Expected: One Pair  ["Ah","As","Kc","Qh","Js"] (Kicker Q vs J)
Same pair, all kickers sequentially: evaluate_hand([["As","Ah","Kc","Qh","Js"], ["As","Ah","Kc","Qh","Ts"]]). Expected: One Pair  ["Ah","As","Kc","Qh","Js"] (Kicker J vs T)
Tie-Breaking - High Card:

Highest card: evaluate_hand([["As","Ks","Qs","Js","8h"], ["Ks","Qs","Js","Ts","9h"]]). Expected: High Card  ["As","Ks","Qs","Js","8h"]
Sequentially compare kickers: evaluate_hand([["As","Ks","Qs","Js","8h"], ["As","Ks","Qs","Js","7h"]]). Expected: High Card  ["As","Ks","Qs","Js","8h"]
All cards different but last: evaluate_hand([["As","Ks","Qs","Js","8h"], ["As","Ks","Qs","Jd","9h"]]). Expected: High Card  ["As","Ks","Qs","Jd","9h"] (Jd has J, Js has J, 9h vs 8h, 9h wins. Sorted cards for second hand: ["As","Ks","Qs","Jd","9h"])

